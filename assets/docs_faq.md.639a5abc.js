import{_ as o,o as e,c as l,k as s,a as p,t as n,Q as t}from"./chunks/framework.a2f82312.js";const g=JSON.parse('{"title":"Common Questions","description":"You know the drill. Questions that get asked oodles","frontmatter":{"title":"Common Questions","description":"You know the drill. Questions that get asked oodles","head":[["meta",{"name":"og:description","content":"You know the drill. Questions that get asked oodles"}],["meta",{"name":"og:image","content":"https://jsx.email/og.png"}],["meta",{"name":"og:site_name","content":"JSX email"}],["meta",{"name":"og:title","content":"Common Questions"}],["meta",{"name":"og:type","content":"website"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:description","content":"You know the drill. Questions that get asked oodles"}],["meta",{"name":"twitter:image","content":"https://jsx.email/og.png"}],["meta",{"name":"twitter:title","content":"Common Questions"}]]},"headers":[],"relativePath":"../../../docs/faq.md","filePath":"../../../docs/faq.md"}'),r={name:"../../../docs/faq.md"},c={id:"frontmatter-title",tabindex:"-1"},i=s("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1),y=t(`<h2 id="dark-and-light-mode" tabindex="-1">Dark and Light Mode <a class="header-anchor" href="#dark-and-light-mode" aria-label="Permalink to &quot;Dark and Light Mode&quot;">​</a></h2><p>Handling dark and light mode in emails is tricky, and doesn&#39;t work exactly like one would expect with relevant experience handling modes on the web. Gmail and Outlook on Windows in particular, have essentially no support for color switching. There&#39;s a lot of information (and misinformation) out there about dark and light mode when authoring emails, but we recommend taking a look at the following articles, which hit most of the important bits of info for authoring emails:</p><ul><li><a href="https://www.litmus.com/blog/the-ultimate-guide-to-dark-mode-for-email-marketers" target="_blank" rel="noreferrer">https://www.litmus.com/blog/the-ultimate-guide-to-dark-mode-for-email-marketers</a></li><li><a href="https://web.dev/articles/color-scheme" target="_blank" rel="noreferrer">https://web.dev/articles/color-scheme</a> (crucial web development related dark mode info)</li></ul><h2 id="deploying-your-preview-app" tabindex="-1">Deploying Your Preview App <a class="header-anchor" href="#deploying-your-preview-app" aria-label="Permalink to &quot;Deploying Your Preview App&quot;">​</a></h2><p>Can I deploy my own preview app? Absolutely! The CLI has the ability to build a custom, deployable preview app using your templates. Please see <a href="https://jsx.email/docs/core/cli#deploying-your-preview-app" target="_blank" rel="noreferrer">the documentation</a> for more information.</p><h2 id="gmail-and-tailwind" tabindex="-1">Gmail and Tailwind <a class="header-anchor" href="#gmail-and-tailwind" aria-label="Permalink to &quot;Gmail and Tailwind&quot;">​</a></h2><p>Gmail is one of the more restrictive email clients when it comes to CSS classes. When using the <code>&lt;Tailwind/&gt;</code> component, set the <code>production: true</code> prop for Gmail compatibility. The <code>Tailwind</code> component will hash and combine class names for compatibility with Gmail&#39;s rules.</p><h2 id="monorepo-setup" tabindex="-1">Monorepo Setup <a class="header-anchor" href="#monorepo-setup" aria-label="Permalink to &quot;Monorepo Setup&quot;">​</a></h2><p><code>jsx-email</code> works out of the box with <em>nearly</em> every monorepo setup. There are no additional or exhaustive setup steps to perform. Enjoy!</p><p>As an aside, <code>Nx</code> is just awful for monorepo tooling. Highly suggest using <a href="https://moonrepo.dev/" target="_blank" rel="noreferrer">Moon</a>, <a href="https://turbo.build/" target="_blank" rel="noreferrer">Turborepo</a>, or straight up <a href="https://pnpm.io/workspaces" target="_blank" rel="noreferrer">pnpm Workspaces</a>.</p><h2 id="next-js-x-await-isn-t-allowed-in-non-async-function-build-errors" tabindex="-1">Next.js <code>x await isn&#39;t allowed in non-async function</code> Build Errors <a class="header-anchor" href="#next-js-x-await-isn-t-allowed-in-non-async-function-build-errors" aria-label="Permalink to &quot;Next.js \`x await isn&#39;t allowed in non-async function\` Build Errors&quot;">​</a></h2><p>If you&#39;re a Next.js user and encountering an error when building your project which looks similar to:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki slack-dark vp-code-dark"><code><span class="line"><span style="color:#E6E6E6;">8058.js from Terser</span></span>
<span class="line"><span style="color:#E6E6E6;">  x await isn&#39;t allowed in non-async function</span></span></code></pre><pre class="shiki slack-ochin vp-code-light"><code><span class="line"><span style="color:#002339;">8058.js from Terser</span></span>
<span class="line"><span style="color:#002339;">  x await isn&#39;t allowed in non-async function</span></span></code></pre></div><p>Then congratulations, you&#39;ve been affected by Next.js using webpack, and some naughty configuration within Next.js. This is a <a href="https://github.com/vercel/next.js/discussions/57535" target="_blank" rel="noreferrer">known issue with Next.js and Webpack</a>, and this may happen when a server action (or <code>use server</code>) is directly imported into a client component. To workaround this, there are two options:</p><h3 id="i-change-imports" tabindex="-1">I. Change imports <a class="header-anchor" href="#i-change-imports" aria-label="Permalink to &quot;I. Change imports&quot;">​</a></h3><p>You can import the server action into a server component first, and then pass it into your client component as a prop. For example:</p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki slack-dark vp-code-dark"><code><span class="line"><span style="color:#6A9955;">// page.jsx</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">MyForm</span><span style="color:#E6E6E6;"> } </span><span style="color:#C586C0;">from</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">&#39;./MyForm&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">myEmailAction</span><span style="color:#E6E6E6;"> } </span><span style="color:#C586C0;">from</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">&#39;./myEmailAction&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">async</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">function</span><span style="color:#E6E6E6;"> </span><span style="color:#DCDCAA;">Page</span><span style="color:#E6E6E6;">() {</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#C586C0;">return</span><span style="color:#E6E6E6;"> </span><span style="color:#808080;">&lt;</span><span style="color:#4EC9B0;">MyForm</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">action</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">myEmailAction</span><span style="color:#569CD6;">}</span><span style="color:#E6E6E6;"> </span><span style="color:#808080;">/&gt;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"><span style="color:#E6E6E6;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// MyForm.jsx</span></span>
<span class="line"><span style="color:#CE9178;">&#39;use client&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">function</span><span style="color:#E6E6E6;"> </span><span style="color:#DCDCAA;">MyForm</span><span style="color:#E6E6E6;">({ </span><span style="color:#9CDCFE;">action</span><span style="color:#E6E6E6;"> }) {</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#6A9955;">// Note the passing of \`action\` as a prop</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#C586C0;">return</span><span style="color:#E6E6E6;"> </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">form</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">action</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">action</span><span style="color:#569CD6;">}</span><span style="color:#808080;">&gt;</span><span style="color:#E6E6E6;">...</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">form</span><span style="color:#808080;">&gt;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"><span style="color:#E6E6E6;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// myEmailAction.js</span></span>
<span class="line"><span style="color:#CE9178;">&#39;use server&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">render</span><span style="color:#E6E6E6;"> } </span><span style="color:#C586C0;">from</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">&#39;jsx-email&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">MyEmail</span><span style="color:#E6E6E6;"> } </span><span style="color:#C586C0;">from</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">&#39;@/emails/MyEmail&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">async</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">function</span><span style="color:#E6E6E6;"> </span><span style="color:#DCDCAA;">myEmailAction</span><span style="color:#E6E6E6;">() {</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#569CD6;">const</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">body</span><span style="color:#E6E6E6;"> </span><span style="color:#D4D4D4;">=</span><span style="color:#E6E6E6;"> </span><span style="color:#C586C0;">await</span><span style="color:#E6E6E6;"> </span><span style="color:#DCDCAA;">render</span><span style="color:#E6E6E6;">(</span><span style="color:#808080;">&lt;</span><span style="color:#4EC9B0;">MyEmail</span><span style="color:#E6E6E6;"> </span><span style="color:#808080;">/&gt;</span><span style="color:#E6E6E6;">);</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#D4D4D4;">...</span></span>
<span class="line"><span style="color:#E6E6E6;">}</span></span></code></pre><pre class="shiki slack-ochin vp-code-light"><code><span class="line"><span style="color:#357B42;font-style:italic;">// page.jsx</span></span>
<span class="line"><span style="color:#7B30D0;">import</span><span style="color:#002339;"> { </span><span style="color:#2F86D2;">MyForm</span><span style="color:#002339;"> } </span><span style="color:#7B30D0;">from</span><span style="color:#002339;"> </span><span style="color:#A44185;">&#39;./MyForm&#39;</span><span style="color:#002339;">;</span></span>
<span class="line"><span style="color:#7B30D0;">import</span><span style="color:#002339;"> { </span><span style="color:#2F86D2;">myEmailAction</span><span style="color:#002339;"> } </span><span style="color:#7B30D0;">from</span><span style="color:#002339;"> </span><span style="color:#A44185;">&#39;./myEmailAction&#39;</span><span style="color:#002339;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B30D0;">export</span><span style="color:#002339;"> </span><span style="color:#DA5221;">async</span><span style="color:#002339;"> </span><span style="color:#0991B6;">function</span><span style="color:#002339;"> </span><span style="color:#7EB233;">Page</span><span style="color:#002339;">() {</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#7B30D0;">return</span><span style="color:#002339;"> &lt;</span><span style="color:#DC3EB7;">MyForm</span><span style="color:#002339;"> </span><span style="color:#DF8618;font-style:italic;">action</span><span style="color:#7B30D0;">=</span><span style="color:#002339;">{</span><span style="color:#2F86D2;">myEmailAction</span><span style="color:#002339;">} /&gt;;</span></span>
<span class="line"><span style="color:#002339;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#357B42;font-style:italic;">// MyForm.jsx</span></span>
<span class="line"><span style="color:#A44185;">&#39;use client&#39;</span><span style="color:#002339;">;</span></span>
<span class="line"><span style="color:#7B30D0;">export</span><span style="color:#002339;"> </span><span style="color:#0991B6;">function</span><span style="color:#002339;"> </span><span style="color:#7EB233;">MyForm</span><span style="color:#002339;">({ </span><span style="color:#B1108E;">action</span><span style="color:#002339;"> }) {</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#357B42;font-style:italic;">// Note the passing of \`action\` as a prop</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#7B30D0;">return</span><span style="color:#002339;"> &lt;</span><span style="color:#0444AC;">form</span><span style="color:#002339;"> </span><span style="color:#DF8618;font-style:italic;">action</span><span style="color:#7B30D0;">=</span><span style="color:#002339;">{</span><span style="color:#2F86D2;">action</span><span style="color:#002339;">}&gt;...&lt;/</span><span style="color:#0444AC;">form</span><span style="color:#002339;">&gt;;</span></span>
<span class="line"><span style="color:#002339;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#357B42;font-style:italic;">// myEmailAction.js</span></span>
<span class="line"><span style="color:#A44185;">&#39;use server&#39;</span><span style="color:#002339;">;</span></span>
<span class="line"><span style="color:#7B30D0;">import</span><span style="color:#002339;"> { </span><span style="color:#2F86D2;">render</span><span style="color:#002339;"> } </span><span style="color:#7B30D0;">from</span><span style="color:#002339;"> </span><span style="color:#A44185;">&#39;jsx-email&#39;</span><span style="color:#002339;">;</span></span>
<span class="line"><span style="color:#7B30D0;">import</span><span style="color:#002339;"> { </span><span style="color:#2F86D2;">MyEmail</span><span style="color:#002339;"> } </span><span style="color:#7B30D0;">from</span><span style="color:#002339;"> </span><span style="color:#A44185;">&#39;@/emails/MyEmail&#39;</span><span style="color:#002339;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B30D0;">export</span><span style="color:#002339;"> </span><span style="color:#DA5221;">async</span><span style="color:#002339;"> </span><span style="color:#0991B6;">function</span><span style="color:#002339;"> </span><span style="color:#7EB233;">myEmailAction</span><span style="color:#002339;">() {</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#0991B6;">const</span><span style="color:#002339;"> </span><span style="color:#2F86D2;">body</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">=</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">await</span><span style="color:#002339;"> </span><span style="color:#7EB233;">render</span><span style="color:#002339;">(&lt;</span><span style="color:#DC3EB7;">MyEmail</span><span style="color:#002339;"> /&gt;);</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#7B30D0;">...</span></span>
<span class="line"><span style="color:#002339;">}</span></span></code></pre></div><h3 id="ii-disable-esm-externals" tabindex="-1">II. Disable ESM Externals <a class="header-anchor" href="#ii-disable-esm-externals" aria-label="Permalink to &quot;II. Disable ESM Externals&quot;">​</a></h3><p>Alternatively, you can also turn off <code>esmExternals</code> in <code>next.config.js</code> which will allow you to keep importing server actions which use <code>jsx-email</code> into client components:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki slack-dark vp-code-dark"><code><span class="line"><span style="color:#6A9955;">/** </span><span style="color:#569CD6;">@type</span><span style="color:#6A9955;"> </span><span style="color:#4EC9B0;">{import(&#39;next&#39;).NextConfig}</span><span style="color:#6A9955;"> */</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">nextConfig</span><span style="color:#E6E6E6;"> </span><span style="color:#D4D4D4;">=</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#9CDCFE;">experimental:</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#E6E6E6;">    </span><span style="color:#9CDCFE;">esmExternals:</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">false</span></span>
<span class="line"><span style="color:#E6E6E6;">  }</span></span>
<span class="line"><span style="color:#E6E6E6;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4EC9B0;">module</span><span style="color:#E6E6E6;">.</span><span style="color:#4EC9B0;">exports</span><span style="color:#E6E6E6;"> </span><span style="color:#D4D4D4;">=</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">nextConfig</span><span style="color:#E6E6E6;">;</span></span></code></pre><pre class="shiki slack-ochin vp-code-light"><code><span class="line"><span style="color:#357B42;font-style:italic;">/** </span><span style="color:#0991B6;">@type</span><span style="color:#357B42;font-style:italic;"> </span><span style="color:#0444AC;font-style:italic;">{import(&#39;next&#39;).NextConfig}</span><span style="color:#357B42;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#0991B6;">const</span><span style="color:#002339;"> </span><span style="color:#2F86D2;">nextConfig</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">=</span><span style="color:#002339;"> {</span></span>
<span class="line"><span style="color:#002339;">  experimental: {</span></span>
<span class="line"><span style="color:#002339;">    esmExternals: </span><span style="color:#174781;">false</span></span>
<span class="line"><span style="color:#002339;">  }</span></span>
<span class="line"><span style="color:#002339;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DC3EB7;">module</span><span style="color:#002339;">.</span><span style="color:#DC3EB7;">exports</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">=</span><span style="color:#002339;"> </span><span style="color:#2F86D2;">nextConfig</span><span style="color:#002339;">;</span></span></code></pre></div><h2 id="how-do-i-use-react-context" tabindex="-1">How do I use React context? <a class="header-anchor" href="#how-do-i-use-react-context" aria-label="Permalink to &quot;How do I use React context?&quot;">​</a></h2><p>Import context helpers from jsx-email instead of from React.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki slack-dark vp-code-dark"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">createContext</span><span style="color:#E6E6E6;">, </span><span style="color:#9CDCFE;">useContext</span><span style="color:#E6E6E6;"> } </span><span style="color:#C586C0;">from</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">&#39;jsx-email&#39;</span><span style="color:#E6E6E6;">;</span></span></code></pre><pre class="shiki slack-ochin vp-code-light"><code><span class="line"><span style="color:#7B30D0;">import</span><span style="color:#002339;"> { </span><span style="color:#2F86D2;">createContext</span><span style="color:#002339;">, </span><span style="color:#2F86D2;">useContext</span><span style="color:#002339;"> } </span><span style="color:#7B30D0;">from</span><span style="color:#002339;"> </span><span style="color:#A44185;">&#39;jsx-email&#39;</span><span style="color:#002339;">;</span></span></code></pre></div><h2 id="i-have-another-question-that-isn-t-answered-here" tabindex="-1">I have another question that isn&#39;t answered here! <a class="header-anchor" href="#i-have-another-question-that-isn-t-answered-here" aria-label="Permalink to &quot;I have another question that isn&#39;t answered here!&quot;">​</a></h2><p>If you have a question that isn&#39;t answered here, please <a href="https://github.com/shellscape/jsx-email/issues" target="_blank" rel="noreferrer">open an issue</a>, start a <a href="https://github.com/shellscape/jsx-email/discussions" target="_blank" rel="noreferrer">Discussion</a>, or <a href="https://discord.gg/FywZN57mTg" target="_blank" rel="noreferrer">join our friendly Discord</a> and ask away!</p><p>If your question relates to a bug or code issue, we really do need you to create a minimal reproduction. Without a reproduction it is nearly impossible for us to work out what whether the problem might be in your code, your individual setup, or a bug in JSX email! The reproduction helps everyone by ensuring we&#39;re all working with the same information.</p><p>The reproduction should be a small, self-contained project. Try and narrow it down to just demonstrating what is causing the issue.</p><p>It&#39;s easy to do, and you can either:</p><ul><li>Use the <a href="https://stackblitz.com/fork/jsx-email-repro" target="_blank" rel="noreferrer"><code>jsx-email-repro</code> StackBlitz reproduction template</a>; or</li><li>Provide a minimal repository link. Read <a href="https://gist.github.com/Rich-Harris/88c5fc2ac6dc941b22e7996af05d70ff" target="_blank" rel="noreferrer">this gist</a> for instructions.</li></ul><p>Include the reproduction link with your question, and we&#39;ll be happy to help!</p>`,30);function E(a,d,m,h,u,f){return e(),l("div",null,[s("h2",c,[p(n(a.$frontmatter.title)+" ",1),i]),s("p",null,n(a.$frontmatter.description),1),y])}const D=o(r,[["render",E]]);export{g as __pageData,D as default};
